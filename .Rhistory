library(caret)
sms_results <- read.csv("sms_results.csv", stringsAsFactors = TRUE)
head(sms_results)
sms_results <- read.csv("sms_results.csv", stringsAsFactors = TRUE)
head(sms_results)
sms_results <- read.csv("sms_results.csv", stringsAsFactors = TRUE)
head(sms_results)
sms_results <- read.csv("sms_results.csv", stringsAsFactors = TRUE)
head(sms_results)
table(sms_results$actual_type, sms_results$predict_type)
confusionMatrix(sms_results$predict_type, sms_results$actual_type, positive = "spam")
library(caret)
library(gmodels)
CrossTable(sms_results$actual_type, sms_results$predict_type)
CrossTable(sms_results$actual_type, sms_results$predict_type)
accuracy <- (152 + 1203) / (152 + 1203 + 4 + 31)
print(accuracy)
error_rate <- (4 + 31) / (152 + 1203 + 4 + 31)
print(error_rate)
table(sms_results$actual_type, sms_results$predict_type)
library(vcd)
Kappa(table(sms_results$actual_type, sms_results$predict_type))
<center>
![Sensitivity](img-sensitivity.png)
</center>
sensitivity(sms_results$predict_type, sms_results$actual_type, positive = "spam")
specificity(sms_results$predict_type, sms_results$actual_type, negative = "ham")
posPredValue(sms_results$predict_type, sms_results$actual_type, positive = "spam")
sensitivity(sms_results$predict_type, sms_results$actual_type, positive = "spam")
library(pROC)
sms_roc <- roc(sms_results$prob_spam, sms_results$actual_type)
sms_roc <- roc(predictor = sms_results$prob_spam, sms_results$actual_type)
library(pROC)
sms_roc <- roc(predictor = sms_results$prob_spam, sms_results$actual_type)
sms_roc
library(pROC)
sms_roc <- roc(predictor = sms_results$prob_spam, sms_results$actual_type)
plot(sms_roc, main = "ROC curve for SMS spam filter",
col = "blue", lwd = 2, legacy.axes = TRUE)
library(pROC)
sms_roc <- roc(predictor = sms_results$prob_spam, sms_results$actual_type)
plot(sms_roc, main = "ROC curve for SMS spam filter",
col = "blue", lwd = 2)
library(pROC)
sms_roc <- roc(predictor = sms_results$prob_spam, sms_results$actual_type)
plot(sms_roc, main = "ROC curve for SMS spam filter",
col = "blue", lwd = 2, legacy.axes = TRUE)
library(pROC)
sms_roc <- roc(predictor = sms_results$prob_spam, sms_results$actual_type)
plot(sms_roc, main = "ROC curve for SMS spam filter",
col = "blue", lwd = 2, legacy.axes = TRUE)
sms_results_knn <- read.csv("sms_results_knn.csv")
auc(sms_roc)
library(pROC)
sms_roc <- roc(predictor = sms_results$prob_spam, sms_results$actual_type)
plot(sms_roc, main = "ROC curve for SMS spam filter",
col = "blue", lwd = 2, legacy.axes = TRUE)
auc(sms_roc)
auc(sms_roc)
auc(sms_roc)
sms_roc <- roc(predictor = sms_results$prob_spam, sms_results$actual_type)
plot(sms_roc, main = "ROC curve for SMS spam filter",
col = "blue", lwd = 2, legacy.axes = TRUE)
sms_roc <- roc(predictor = sms_results$prob_spam, sms_results$actual_type)
plot(sms_roc, main = "ROC curve for SMS spam filter",
col = "blue", lwd = 2, legacy.axes = TRUE)
sms_roc <- roc(predictor = sms_results$prob_spam, sms_results$actual_type)
roc_plot <- plot(sms_roc, main = "ROC curve for SMS spam filter",
col = "blue", lwd = 2, legacy.axes = TRUE)
sms_roc <- roc(predictor = sms_results$prob_spam, sms_results$actual_type)
roc_plot <- plot(sms_roc, main = "ROC curve for SMS spam filter",
col = "blue", lwd = 2, legacy.axes = TRUE)
sms_roc <- roc(predictor = sms_results$prob_spam, sms_results$actual_type)
roc_plot <- plot(sms_roc, main = "ROC curve for SMS spam filter",
col = "blue", lwd = 2, legacy.axes = TRUE)
